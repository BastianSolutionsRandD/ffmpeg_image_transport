#!/usr/bin/env python2
PACKAGE = "ffmpeg_image_transport"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

#
# encoder options
#
encode_enum = gen.enum([gen.const("h264_nvenc",       str_t, "h264_nvenc", "h264_nvenc"),
                        gen.const("libx264",       str_t, "libx264", "libx264")],
                       "An enum to set the encoder")
gen.add("encoder", str_t, 0,  "encoding method", "h264_nvenc", edit_method=encode_enum)
profile_enum = gen.enum([gen.const("main",       str_t, "main", ""),
                         gen.const("high",       str_t, "high", "")],
                        "An enum to set the profile")
gen.add("profile", str_t, 0,  "profile", "main", edit_method=profile_enum)
preset_enum = gen.enum([gen.const("slow",       str_t, "slow", ""),
                        gen.const("medium",       str_t, "medium", ""),
                        gen.const("fast",       str_t, "fast", "")],
                        "An enum to set the preset")
gen.add("preset", str_t, 0,  "preset", "slow", edit_method=preset_enum)


gen.add("qmax",  int_t, 0, "maximum allowed quantization", 10, 0, 63)
gen.add("bit_rate",  int_t, 0, "bit_rate [in bits_sec]", 1000000, 10, 2000000000)
gen.add("gop_size",  int_t, 0, "gop_size [frames]", 15, 1, 128)
gen.add("measure_performance",  bool_t, 0, "measure performance", True)
gen.add("performance_interval",  int_t, 0, "interval between perf printout [frames]", 175, 1, 100000)

exit(gen.generate(PACKAGE, "ffmpeg_image_transport", "EncoderDyn"))
